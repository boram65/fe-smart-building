"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/test";
exports.ids = ["pages/api/test"];
exports.modules = {

/***/ "mysql":
/*!************************!*\
  !*** external "mysql" ***!
  \************************/
/***/ ((module) => {

module.exports = require("mysql");

/***/ }),

/***/ "(api)/./pages/api/test.js":
/*!***************************!*\
  !*** ./pages/api/test.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    try {\n        let mysql = __webpack_require__(/*! mysql */ \"mysql\");\n        let connection = mysql.createConnection({\n            host: \"localhost\",\n            user: \"root\",\n            password: \"1234\",\n            database: \"room\"\n        });\n        let co2Json;\n        let humJson;\n        let litJson;\n        let pirJson;\n        let temJson;\n        // `select co2, room, createTime from(select * from co2 where (room, createTime) in ( select room, max(createTime) as createTime from co2 group by room) order by id desc)t group by t.room`\n        let query = `select co2, room, createTime from(select * from co2 where (room, createTime) in ( select room, max(createTime) as createTime from co2 group by room) order by id desc)t group by t.room`;\n        connection.query(query, async function(error, rows, fields) {\n            if (!error) {\n                //console.log(rows);\n                //console.log(JSON.parse(JSON.stringify(rows))); // 이렇게 해야 제대로 object 방식으로 사용 가능\n                co2Json = await JSON.parse(JSON.stringify(rows));\n            } else {\n                console.log(\"Error while performing Query.\", error);\n            }\n        });\n        query = `select hum, room, createTime from(select * from humidity where (room, createTime) in ( select room, max(createTime) as createTime from humidity group by room) order by id desc)t group by t.room`;\n        connection.query(query, async function(error, rows, fields) {\n            if (!error) {\n                //console.log(rows);\n                humJson = await JSON.parse(JSON.stringify(rows));\n            } else {\n                console.log(\"Error while performing Query.\", error);\n            }\n        });\n        query = `select lit, room, createTime from(select * from light where (room, createTime) in ( select room, max(createTime) as createTime from light group by room) order by id desc)t group by t.room`;\n        connection.query(query, async function(error, rows, fields) {\n            if (!error) {\n                //console.log(rows);\n                litJson = await JSON.parse(JSON.stringify(rows));\n            } else {\n                console.log(\"Error while performing Query.\", error);\n            }\n        });\n        query = `select pir, room, createTime from(select * from pir where (room, createTime) in ( select room, max(createTime) as createTime from pir group by room) order by id desc)t group by t.room`;\n        connection.query(query, async function(error, rows, fields) {\n            if (!error) {\n                //console.log(rows);\n                pirJson = await JSON.parse(JSON.stringify(rows));\n            } else {\n                console.log(\"Error while performing Query.\", error);\n            }\n        });\n        query = `select tem, room, createTime from(select * from temperature where (room, createTime) in ( select room, max(createTime) as createTime from temperature group by room) order by id desc)t group by t.room`;\n        connection.query(query, async function(error, rows, fields) {\n            if (!error) {\n                //console.log(rows);\n                temJson = await JSON.parse(JSON.stringify(rows));\n                res.status(200).json({\n                    co2: co2Json,\n                    hum: humJson,\n                    lit: litJson,\n                    pir: pirJson,\n                    tem: temJson\n                });\n            } else {\n                console.log(\"Error while performing Query.\", error);\n            }\n        });\n        // console.log(temJson);\n        // res.status(200).json({\n        //   co2: co2Json,\n        //   hum: humJson,\n        //   lit: litJson,\n        //   pir: pirJson,\n        //   tem: temJson,\n        // });\n        connection.end();\n    } catch (err) {\n        res.status(404).json({\n            no: \"err\"\n        });\n    }\n} // finally {\n //   //예외가 있든 없든 실행되는 부분\n //   await client.$disconnect();\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Wi9CLElBQUl1QixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVRLElBQUk7UUFBTTtJQUNuQztBQUNGLENBQUMsQ0FDRCxZQUFZO0NBQ1osd0JBQXdCO0NBQ3hCLGdDQUFnQztDQUNoQyxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1mZS1zbWFydF9idWlsZGluZy8uL3BhZ2VzL2FwaS90ZXN0LmpzPzZlN2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICB0cnkge1xuICAgIGxldCBteXNxbCA9IHJlcXVpcmUoXCJteXNxbFwiKTtcblxuICAgIGxldCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgICBob3N0OiBcImxvY2FsaG9zdFwiLFxuICAgICAgdXNlcjogXCJyb290XCIsXG4gICAgICBwYXNzd29yZDogXCIxMjM0XCIsXG4gICAgICBkYXRhYmFzZTogXCJyb29tXCIsXG4gICAgfSk7XG5cbiAgICBsZXQgY28ySnNvbjtcbiAgICBsZXQgaHVtSnNvbjtcbiAgICBsZXQgbGl0SnNvbjtcbiAgICBsZXQgcGlySnNvbjtcbiAgICBsZXQgdGVtSnNvbjtcbiAgICAvLyBgc2VsZWN0IGNvMiwgcm9vbSwgY3JlYXRlVGltZSBmcm9tKHNlbGVjdCAqIGZyb20gY28yIHdoZXJlIChyb29tLCBjcmVhdGVUaW1lKSBpbiAoIHNlbGVjdCByb29tLCBtYXgoY3JlYXRlVGltZSkgYXMgY3JlYXRlVGltZSBmcm9tIGNvMiBncm91cCBieSByb29tKSBvcmRlciBieSBpZCBkZXNjKXQgZ3JvdXAgYnkgdC5yb29tYFxuICAgIGxldCBxdWVyeSA9IGBzZWxlY3QgY28yLCByb29tLCBjcmVhdGVUaW1lIGZyb20oc2VsZWN0ICogZnJvbSBjbzIgd2hlcmUgKHJvb20sIGNyZWF0ZVRpbWUpIGluICggc2VsZWN0IHJvb20sIG1heChjcmVhdGVUaW1lKSBhcyBjcmVhdGVUaW1lIGZyb20gY28yIGdyb3VwIGJ5IHJvb20pIG9yZGVyIGJ5IGlkIGRlc2MpdCBncm91cCBieSB0LnJvb21gO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIGFzeW5jIGZ1bmN0aW9uIChlcnJvciwgcm93cywgZmllbGRzKSB7XG4gICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2cocm93cyk7XG4gICAgICAgIC8vY29uc29sZS5sb2coSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyb3dzKSkpOyAvLyDsnbTroIfqsowg7ZW07JW8IOygnOuMgOuhnCBvYmplY3Qg67Cp7Iud7Jy866GcIOyCrOyaqSDqsIDriqVcbiAgICAgICAgY28ySnNvbiA9IGF3YWl0IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocm93cykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciB3aGlsZSBwZXJmb3JtaW5nIFF1ZXJ5LlwiLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBxdWVyeSA9IGBzZWxlY3QgaHVtLCByb29tLCBjcmVhdGVUaW1lIGZyb20oc2VsZWN0ICogZnJvbSBodW1pZGl0eSB3aGVyZSAocm9vbSwgY3JlYXRlVGltZSkgaW4gKCBzZWxlY3Qgcm9vbSwgbWF4KGNyZWF0ZVRpbWUpIGFzIGNyZWF0ZVRpbWUgZnJvbSBodW1pZGl0eSBncm91cCBieSByb29tKSBvcmRlciBieSBpZCBkZXNjKXQgZ3JvdXAgYnkgdC5yb29tYDtcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCBhc3luYyBmdW5jdGlvbiAoZXJyb3IsIHJvd3MsIGZpZWxkcykge1xuICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHJvd3MpO1xuICAgICAgICBodW1Kc29uID0gYXdhaXQgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyb3dzKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIHdoaWxlIHBlcmZvcm1pbmcgUXVlcnkuXCIsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHF1ZXJ5ID0gYHNlbGVjdCBsaXQsIHJvb20sIGNyZWF0ZVRpbWUgZnJvbShzZWxlY3QgKiBmcm9tIGxpZ2h0IHdoZXJlIChyb29tLCBjcmVhdGVUaW1lKSBpbiAoIHNlbGVjdCByb29tLCBtYXgoY3JlYXRlVGltZSkgYXMgY3JlYXRlVGltZSBmcm9tIGxpZ2h0IGdyb3VwIGJ5IHJvb20pIG9yZGVyIGJ5IGlkIGRlc2MpdCBncm91cCBieSB0LnJvb21gO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIGFzeW5jIGZ1bmN0aW9uIChlcnJvciwgcm93cywgZmllbGRzKSB7XG4gICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2cocm93cyk7XG4gICAgICAgIGxpdEpzb24gPSBhd2FpdCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJvd3MpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3Igd2hpbGUgcGVyZm9ybWluZyBRdWVyeS5cIiwgZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcXVlcnkgPSBgc2VsZWN0IHBpciwgcm9vbSwgY3JlYXRlVGltZSBmcm9tKHNlbGVjdCAqIGZyb20gcGlyIHdoZXJlIChyb29tLCBjcmVhdGVUaW1lKSBpbiAoIHNlbGVjdCByb29tLCBtYXgoY3JlYXRlVGltZSkgYXMgY3JlYXRlVGltZSBmcm9tIHBpciBncm91cCBieSByb29tKSBvcmRlciBieSBpZCBkZXNjKXQgZ3JvdXAgYnkgdC5yb29tYDtcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCBhc3luYyBmdW5jdGlvbiAoZXJyb3IsIHJvd3MsIGZpZWxkcykge1xuICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHJvd3MpO1xuICAgICAgICBwaXJKc29uID0gYXdhaXQgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyb3dzKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIHdoaWxlIHBlcmZvcm1pbmcgUXVlcnkuXCIsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHF1ZXJ5ID0gYHNlbGVjdCB0ZW0sIHJvb20sIGNyZWF0ZVRpbWUgZnJvbShzZWxlY3QgKiBmcm9tIHRlbXBlcmF0dXJlIHdoZXJlIChyb29tLCBjcmVhdGVUaW1lKSBpbiAoIHNlbGVjdCByb29tLCBtYXgoY3JlYXRlVGltZSkgYXMgY3JlYXRlVGltZSBmcm9tIHRlbXBlcmF0dXJlIGdyb3VwIGJ5IHJvb20pIG9yZGVyIGJ5IGlkIGRlc2MpdCBncm91cCBieSB0LnJvb21gO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIGFzeW5jIGZ1bmN0aW9uIChlcnJvciwgcm93cywgZmllbGRzKSB7XG4gICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2cocm93cyk7XG4gICAgICAgIHRlbUpzb24gPSBhd2FpdCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJvd3MpKTtcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIGNvMjogY28ySnNvbixcbiAgICAgICAgICBodW06IGh1bUpzb24sXG4gICAgICAgICAgbGl0OiBsaXRKc29uLFxuICAgICAgICAgIHBpcjogcGlySnNvbixcbiAgICAgICAgICB0ZW06IHRlbUpzb24sXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciB3aGlsZSBwZXJmb3JtaW5nIFF1ZXJ5LlwiLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBjb25zb2xlLmxvZyh0ZW1Kc29uKTtcbiAgICAvLyByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgLy8gICBjbzI6IGNvMkpzb24sXG4gICAgLy8gICBodW06IGh1bUpzb24sXG4gICAgLy8gICBsaXQ6IGxpdEpzb24sXG4gICAgLy8gICBwaXI6IHBpckpzb24sXG4gICAgLy8gICB0ZW06IHRlbUpzb24sXG4gICAgLy8gfSk7XG4gICAgY29ubmVjdGlvbi5lbmQoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBubzogXCJlcnJcIiB9KTtcbiAgfVxufVxuLy8gZmluYWxseSB7XG4vLyAgIC8v7JiI7Jm46rCAIOyeiOuToCDsl4brk6Ag7Iuk7ZaJ65CY64qUIOu2gOu2hFxuLy8gICBhd2FpdCBjbGllbnQuJGRpc2Nvbm5lY3QoKTtcbi8vIH1cbiJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibXlzcWwiLCJyZXF1aXJlIiwiY29ubmVjdGlvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjbzJKc29uIiwiaHVtSnNvbiIsImxpdEpzb24iLCJwaXJKc29uIiwidGVtSnNvbiIsInF1ZXJ5IiwiZXJyb3IiLCJyb3dzIiwiZmllbGRzIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImpzb24iLCJjbzIiLCJodW0iLCJsaXQiLCJwaXIiLCJ0ZW0iLCJlbmQiLCJlcnIiLCJubyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/test.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/test.js"));
module.exports = __webpack_exports__;

})();